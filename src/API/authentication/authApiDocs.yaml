swagger: "2.0"
info:
 title: Authentication API's

tags:  # Define a global tag
  - name: User Management  # Name of the global tag
securitySchemes:
  UserToken:
    type: apiKey
    in: header
    name: Authorization

schemes: [http,https]

#user signUp API
paths: 
 /app/userSignUp:
  post:
    summary: Adds a new user
    produces:
      - application/json
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        schema:
          $ref: "#/components/schemas/UserSignUp"
    responses:
      '200':
        description: OK
    tags:  
      - User Management

#user signIn API
 /app/userSignIn:
  post:
    summary: user login
    produces:
      - application/json
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        schema:
          $ref: "#/components/schemas/userSignIn"
    responses:
      '200':
        description: OK
    tags:  
      - User Management

 #user forgot-password API
 /app/forgot-password:
  post:
    summary: user login
    produces:
      - application/json
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        schema:
          $ref: "#/components/schemas/userForgotPassword"
    responses:
      '200':
        description: OK
    tags:  
      - User Management     

 #user create new password API
 /app/create-new-password:
  post:
    summary: user login
    produces:
      - application/json
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        schema:
          $ref: "#/components/schemas/createNewPassword"
    responses:
      '200':
        description: OK
    tags:  
      - User Management 

#schemas
components:
  schemas:
    UserSignUp:
      type: object
      required:
        - name
        - id
      properties:
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        DOB:
          type: string
        email:
          type: string    
        mobileNumber:
          type: number               
        password:
          type: string
        isEmailVerified:
          type: boolean  
    userSignIn: 
      type: object
      required:
      - email
      - password
      properties:
        email:
          type: string
        password:
          type: string
    userForgotPassword: 
      type: object
      required:
      - email
      properties:
        email:
          type: string          
    createNewPassword: 
      type: object
      required:
      - email
      - newPassword
      properties:
        email:
          type: string
        newPassword:
          type: string